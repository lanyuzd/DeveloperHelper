apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'//kapt 插件
android {
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    signingConfigs {
        releaseConfig
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wrbug.developerhelper"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 100020
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters  "armeabi-v7a","arm64-v8a" //"armeabi",
        }
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
            if (signingConfigs.releaseConfig != null) {
                signingConfig signingConfigs.releaseConfig
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'com.github.yhaolpz:FloatWindow:1.0.9'
    implementation project(':basecommon')
    kapt "com.android.databinding:compiler:3.1.4"
    implementation 'com.elvishew:xlog:1.6.1'
    implementation 'org.jetbrains.anko:anko-commons:0.10.8'
    //dagger2
    implementation 'com.google.dagger:dagger:2.16'
    // https://mvnrepository.com/artifact/dom4j/dom4j
    implementation 'dom4j:dom4j:1.6.1'
    implementation 'com.evrencoskun.library:tableview:0.8.8'
    implementation 'gdut.bsx:share2:0.9.3'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    implementation project(':commonutil')
    implementation project(':mmkv')
    implementation project(':xposedmodule')
    implementation project(':commonwidget')
}
kapt {
    generateStubs = true
}
Properties props = new Properties()
def propFile = file('../signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null &&
            props.containsKey('SIGN_FILE') && props.containsKey('SIGN_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.releaseConfig.storeFile = file(props['SIGN_FILE'])
        android.signingConfigs.releaseConfig.storePassword = props['SIGN_PASSWORD']
        android.signingConfigs.releaseConfig.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.releaseConfig.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'release build not found signing properties'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'release build not found signing file'
    android.buildTypes.release.signingConfig = null
}


